/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-03-30 23:20:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.*;
import java.sql.ResultSet;

public final class editar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    if (session.getAttribute("usuario") == null) {
        response.sendRedirect("login.jsp");
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Editar/Excluir Contato</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"styles.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"nav-menu\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <a href=\"index.jsp\">Início</a>\r\n");
      out.write("            <a href=\"cadastrar.jsp\">Cadastrar Contato</a>\r\n");
      out.write("            <a href=\"listar.jsp\">Listar Contatos</a>\r\n");
      out.write("            <a href=\"consultar.jsp\">Consultar</a>\r\n");
      out.write("            <a href=\"logout.jsp\">Sair</a>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <h2>Editar/Excluir Contato</h2>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Formulário de Busca por CPF -->\r\n");
      out.write("        <form method=\"get\" class=\"form-group\">\r\n");
      out.write("            <label for=\"busca_cpf\">CPF do Contato:</label>\r\n");
      out.write("            <input type=\"text\" name=\"cpf\" id=\"busca_cpf\" maxlength=\"11\" required>\r\n");
      out.write("            <button type=\"submit\">Buscar</button>\r\n");
      out.write("        </form>\r\n");
      out.write("        \r\n");
      out.write("        ");

            String cpf = request.getParameter("cpf");
            if (cpf != null && !cpf.trim().isEmpty()) {
                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection conexao = DriverManager.getConnection("jdbc:mysql://localhost:3306/db_contatos", "root", "");
                    
                    // Verifica se é uma requisição de exclusão
                    if (request.getParameter("acao") != null && request.getParameter("acao").equals("excluir")) {
                        String sqlDelete = "DELETE FROM tb_contato WHERE cpf = ?";
                        PreparedStatement stmtDelete = conexao.prepareStatement(sqlDelete);
                        stmtDelete.setString(1, cpf);
                        int linhasAfetadas = stmtDelete.executeUpdate();
                        
                        if (linhasAfetadas > 0) {
                            out.println("<p class='success-message'>Contato excluído com sucesso!</p>");
                        } else {
                            out.println("<p class='error-message'>Contato não encontrado.</p>");
                        }
                    }
                    // Verifica se é uma requisição de atualização
                    else if (request.getMethod().equals("POST")) {
                        String sqlUpdate = "UPDATE tb_contato SET endereco = ?, cidade = ?, estado = ?, ddd = ?, celular = ?, email = ? WHERE cpf = ?";
                        PreparedStatement stmtUpdate = conexao.prepareStatement(sqlUpdate);
                        
                        stmtUpdate.setString(1, request.getParameter("endereco"));
                        stmtUpdate.setString(2, request.getParameter("cidade"));
                        stmtUpdate.setString(3, request.getParameter("estado"));
                        stmtUpdate.setString(4, request.getParameter("ddd"));
                        stmtUpdate.setString(5, request.getParameter("celular"));
                        stmtUpdate.setString(6, request.getParameter("email"));
                        stmtUpdate.setString(7, cpf);
                        
                        stmtUpdate.executeUpdate();
                        out.println("<p class='success-message'>Contato atualizado com sucesso!</p>");
                    }
                    
                    // Busca os dados do contato
                    String sqlSelect = "SELECT * FROM tb_contato WHERE cpf = ?";
                    PreparedStatement stmtSelect = conexao.prepareStatement(sqlSelect);
                    stmtSelect.setString(1, cpf);
                    ResultSet rs = stmtSelect.executeQuery();
                    
                    if (rs.next()) {
                        
      out.write("\r\n");
      out.write("                        <div style=\"margin-top: 20px;\">\r\n");
      out.write("                            <form method=\"post\" action=\"editar.jsp?cpf=");
      out.print( cpf );
      out.write("\" onsubmit=\"return validarFormulario()\">\r\n");
      out.write("                                <!-- Campos não editáveis -->\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label>Primeiro Nome:</label>\r\n");
      out.write("                                    <input type=\"text\" value=\"");
      out.print( rs.getString("primeiro_nome") );
      out.write("\" disabled>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label>Último Nome:</label>\r\n");
      out.write("                                    <input type=\"text\" value=\"");
      out.print( rs.getString("ultimo_nome") );
      out.write("\" disabled>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label>CPF:</label>\r\n");
      out.write("                                    <input type=\"text\" value=\"");
      out.print( rs.getString("cpf") );
      out.write("\" disabled>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label>Mês de Nascimento:</label>\r\n");
      out.write("                                    <input type=\"text\" value=\"");
      out.print( rs.getInt("mes_nascimento") );
      out.write("\" disabled>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <!-- Campos editáveis -->\r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"endereco\">Endereço:</label>\r\n");
      out.write("                                    <input type=\"text\" name=\"endereco\" id=\"endereco\" value=\"");
      out.print( rs.getString("endereco") );
      out.write("\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"cidade\">Cidade:</label>\r\n");
      out.write("                                    <input type=\"text\" name=\"cidade\" id=\"cidade\" value=\"");
      out.print( rs.getString("cidade") );
      out.write("\" pattern=\"[A-Za-z]+\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"estado\">Estado:</label>\r\n");
      out.write("                                    <select name=\"estado\" id=\"estado\" required>\r\n");
      out.write("                                        ");
 
                                            String[] estados = {"AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG",
                                                              "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO"};
                                            String estadoAtual = rs.getString("estado");
                                            for (String estado : estados) {
                                                out.println(String.format("<option value='%s' %s>%s</option>", 
                                                    estado, estado.equals(estadoAtual) ? "selected" : "", estado));
                                            }
                                        
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"ddd\">DDD:</label>\r\n");
      out.write("                                    <select name=\"ddd\" id=\"ddd\" required>\r\n");
      out.write("                                        ");
 
                                            String[] ddds = {"11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "24", "27", "28",
                                                            "31", "32", "33", "34", "35", "37", "38", "41", "42", "43", "44", "45", "46", "47", "48", "49",
                                                            "51", "53", "54", "55", "61", "62", "63", "64", "65", "66", "67", "68", "69", "71", "73", "74",
                                                            "75", "77", "79", "81", "82", "83", "84", "85", "86", "87", "88", "89", "91", "92", "93", "94",
                                                            "95", "96", "97", "98", "99"};
                                            String dddAtual = rs.getString("ddd");
                                            for (String ddd : ddds) {
                                                out.println(String.format("<option value='%s' %s>%s</option>", 
                                                    ddd, ddd.equals(dddAtual) ? "selected" : "", ddd));
                                            }
                                        
      out.write("\r\n");
      out.write("                                    </select>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"celular\">Celular:</label>\r\n");
      out.write("                                    <input type=\"tel\" name=\"celular\" id=\"celular\" value=\"");
      out.print( rs.getString("celular") );
      out.write("\" maxlength=\"9\" pattern=\"[0-9]{9}\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <div class=\"form-group\">\r\n");
      out.write("                                    <label for=\"email\">Email:</label>\r\n");
      out.write("                                    <input type=\"email\" name=\"email\" id=\"email\" value=\"");
      out.print( rs.getString("email") );
      out.write("\" required>\r\n");
      out.write("                                </div>\r\n");
      out.write("                                \r\n");
      out.write("                                <button type=\"submit\">Atualizar</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                            \r\n");
      out.write("                            <!-- Botão de Exclusão -->\r\n");
      out.write("                            <form method=\"get\" action=\"editar.jsp\" style=\"margin-top: 20px;\" onsubmit=\"return confirmarExclusao()\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"cpf\" value=\"");
      out.print( cpf );
      out.write("\">\r\n");
      out.write("                                <input type=\"hidden\" name=\"acao\" value=\"excluir\">\r\n");
      out.write("                                <button type=\"submit\" style=\"background-color: #ff4444;\">Excluir Contato</button>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <script>\r\n");
      out.write("                            function confirmarExclusao() {\r\n");
      out.write("                                return confirm('Tem certeza que deseja excluir este contato?');\r\n");
      out.write("                            }\r\n");
      out.write("                            \r\n");
      out.write("                            function validarFormulario() {\r\n");
      out.write("                                return true; // Adicione validações adicionais se necessário\r\n");
      out.write("                            }\r\n");
      out.write("                        </script>\r\n");
      out.write("                        ");

                    } else {
                        out.println("<p class='error-message'>Contato não encontrado.</p>");
                    }
                    
                    conexao.close();
                } catch (Exception e) {
                    out.println("<p class='error-message'>Erro ao processar a requisição: " + e.getMessage() + "</p>");
                }
            }
        
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
