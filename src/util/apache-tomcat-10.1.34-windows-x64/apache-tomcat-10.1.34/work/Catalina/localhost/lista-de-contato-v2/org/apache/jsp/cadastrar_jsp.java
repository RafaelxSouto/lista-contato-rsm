/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-04-01 17:12:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class cadastrar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

    if (session.getAttribute("usuario") == null) {
        response.sendRedirect("login.jsp");
        return;
    }

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Cadastrar Contato</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background-color: #f5f5f5;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .container {\r\n");
      out.write("            max-width: 800px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            background-color: white;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .header {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            padding-bottom: 20px;\r\n");
      out.write("            border-bottom: 1px solid #ddd;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .header h2 {\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group {\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group label {\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin-bottom: 5px;\r\n");
      out.write("            color: #555;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group input, .form-group select {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("            padding: 8px;\r\n");
      out.write("            border: 1px solid #ddd;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-group input:focus, .form-group select:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            border-color: #4CAF50;\r\n");
      out.write("            box-shadow: 0 0 0 2px rgba(76, 175, 80, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-row {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .form-row .form-group {\r\n");
      out.write("            flex: 1;\r\n");
      out.write("            margin-bottom: 0;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            transition: background-color 0.2s;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-primary {\r\n");
      out.write("            background-color: #4CAF50;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-primary:hover {\r\n");
      out.write("            background-color: #45a049;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-secondary {\r\n");
      out.write("            background-color: #f0f0f0;\r\n");
      out.write("            color: #333;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .btn-secondary:hover {\r\n");
      out.write("            background-color: #e0e0e0;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-message {\r\n");
      out.write("            color: #f44336;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("            margin-top: 5px;\r\n");
      out.write("            display: none;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .form-row {\r\n");
      out.write("                flex-direction: column;\r\n");
      out.write("                gap: 15px;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            .form-row .form-group {\r\n");
      out.write("                margin-bottom: 0;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        ");
 if (request.getParameter("error") != null) { 
      out.write("\r\n");
      out.write("            <div style=\"background-color: #ffebee; color: #c62828; padding: 10px; margin-bottom: 20px; border-radius: 4px;\">\r\n");
      out.write("                ");
 String error = request.getParameter("error");
                   if (error.equals("missing_fields")) { 
      out.write("\r\n");
      out.write("                    Todos os campos são obrigatórios.\r\n");
      out.write("                ");
 } else if (error.equals("database")) { 
      out.write("\r\n");
      out.write("                    Erro ao salvar no banco de dados. Verifique se o CPF já está cadastrado.\r\n");
      out.write("                ");
 } else if (error.equals("invalid_month")) { 
      out.write("\r\n");
      out.write("                    Mês de nascimento inválido.\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    ");
      out.print( error );
      out.write("\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("        <div class=\"header\">\r\n");
      out.write("            <h2>Cadastrar Novo Contato</h2>\r\n");
      out.write("            <a href=\"home.jsp\" class=\"btn btn-secondary\">Voltar</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <form action=\"salvar_contato.jsp\" method=\"post\" onsubmit=\"return validateForm()\"> \r\n");
      out.write("            <div class=\"form-row\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"primeiroNome\">Primeiro Nome:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"primeiroNome\" name=\"primeiroNome\" required pattern=\"[A-Za-z]+\">\r\n");
      out.write("                    <div class=\"error-message\" id=\"primeiroNomeError\">Use apenas letras (A-Z)</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"ultimoNome\">Último Nome:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"ultimoNome\" name=\"ultimoNome\" required pattern=\"[A-Za-z]+\">\r\n");
      out.write("                    <div class=\"error-message\" id=\"ultimoNomeError\">Use apenas letras (A-Z)</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"endereco\">Endereço:</label>\r\n");
      out.write("                <input type=\"text\" id=\"endereco\" name=\"endereco\" required>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-row\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"cidade\">Cidade:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"cidade\" name=\"cidade\" required pattern=\"[A-Za-zÀ-ÖØ-öø-ÿ\\s]+\">\r\n");
      out.write("                    <div class=\"error-message\" id=\"cidadeError\">Use apenas letras (A-Z)</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"estado\">Estado:</label>\r\n");
      out.write("                    <select id=\"estado\" name=\"estado\" required>\r\n");
      out.write("                        <option value=\"\">Selecione...</option>\r\n");
      out.write("                        <option value=\"AC\">AC</option>\r\n");
      out.write("                        <option value=\"AL\">AL</option>\r\n");
      out.write("                        <option value=\"AP\">AP</option>\r\n");
      out.write("                        <option value=\"AM\">AM</option>\r\n");
      out.write("                        <option value=\"BA\">BA</option>\r\n");
      out.write("                        <option value=\"CE\">CE</option>\r\n");
      out.write("                        <option value=\"DF\">DF</option>\r\n");
      out.write("                        <option value=\"ES\">ES</option>\r\n");
      out.write("                        <option value=\"GO\">GO</option>\r\n");
      out.write("                        <option value=\"MA\">MA</option>\r\n");
      out.write("                        <option value=\"MT\">MT</option>\r\n");
      out.write("                        <option value=\"MS\">MS</option>\r\n");
      out.write("                        <option value=\"MG\">MG</option>\r\n");
      out.write("                        <option value=\"PA\">PA</option>\r\n");
      out.write("                        <option value=\"PB\">PB</option>\r\n");
      out.write("                        <option value=\"PR\">PR</option>\r\n");
      out.write("                        <option value=\"PE\">PE</option>\r\n");
      out.write("                        <option value=\"PI\">PI</option>\r\n");
      out.write("                        <option value=\"RJ\">RJ</option>\r\n");
      out.write("                        <option value=\"RN\">RN</option>\r\n");
      out.write("                        <option value=\"RS\">RS</option>\r\n");
      out.write("                        <option value=\"RO\">RO</option>\r\n");
      out.write("                        <option value=\"RR\">RR</option>\r\n");
      out.write("                        <option value=\"SC\">SC</option>\r\n");
      out.write("                        <option value=\"SP\">SP</option>\r\n");
      out.write("                        <option value=\"SE\">SE</option>\r\n");
      out.write("                        <option value=\"TO\">TO</option>\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-row\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"ddd\">DDD:</label>\r\n");
      out.write("                    <select id=\"ddd\" name=\"ddd\" required>\r\n");
      out.write("                        <option value=\"\">Selecione...</option>\r\n");
      out.write("                        ");
 String[] ddds = {"11", "12", "13", "14", "15", "16", "17", "18", "19", "21", "22", "24", "27", "28",
                                          "31", "32", "33", "34", "35", "37", "38", "41", "42", "43", "44", "45", "46", "47",
                                          "48", "49", "51", "53", "54", "55", "61", "62", "63", "64", "65", "66", "67", "68",
                                          "69", "71", "73", "74", "75", "77", "79", "81", "82", "83", "84", "85", "86", "87",
                                          "88", "89", "91", "92", "93", "94", "95", "96", "97", "98", "99"};
                           for(String ddd : ddds) { 
      out.write("\r\n");
      out.write("                        <option value=\"");
      out.print( ddd );
      out.write('"');
      out.write('>');
      out.print( ddd );
      out.write("</option>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"celular\">Celular:</label>\r\n");
      out.write("                    <input type=\"text\" id=\"celular\" name=\"celular\" required maxlength=\"9\" pattern=\"[0-9]{9}\">\r\n");
      out.write("                    <div class=\"error-message\" id=\"celularError\">Digite 9 números</div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-row\">\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"email\">Email:</label>\r\n");
      out.write("                    <input type=\"email\" id=\"email\" name=\"email\" required>\r\n");
      out.write("                    <div class=\"error-message\" id=\"emailError\">Email inválido</div>\r\n");
      out.write("                </div>\r\n");
      out.write("                \r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"mesNascimento\">Mês de Nascimento:</label>\r\n");
      out.write("                    <select id=\"mesNascimento\" name=\"mesNascimento\" required>\r\n");
      out.write("                        <option value=\"\">Selecione...</option>\r\n");
      out.write("                        ");
 for(int i = 1; i <= 12; i++) { 
      out.write("\r\n");
      out.write("                        <option value=\"");
      out.print( i );
      out.write('"');
      out.write('>');
      out.print( i );
      out.write("</option>\r\n");
      out.write("                        ");
 } 
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"form-group\">\r\n");
      out.write("                <label for=\"cpf\">CPF:</label>\r\n");
      out.write("                <input type=\"text\" id=\"cpf\" name=\"cpf\" required maxlength=\"11\" pattern=\"[0-9]{11}\">\r\n");
      out.write("                <div class=\"error-message\" id=\"cpfError\">CPF inválido</div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div style=\"margin-top: 20px;\">\r\n");
      out.write("                <button type=\"submit\" class=\"btn btn-primary\">Cadastrar</button>\r\n");
      out.write("                <button type=\"reset\" class=\"btn btn-secondary\" style=\"margin-left: 10px;\">Limpar</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        function validateForm() {\r\n");
      out.write("            let isValid = true;\r\n");
      out.write("            const primeiroNome = document.getElementById('primeiroNome');\r\n");
      out.write("            const ultimoNome = document.getElementById('ultimoNome');\r\n");
      out.write("            const cidade = document.getElementById('cidade');\r\n");
      out.write("            const celular = document.getElementById('celular');\r\n");
      out.write("            const email = document.getElementById('email');\r\n");
      out.write("            const cpf = document.getElementById('cpf');\r\n");
      out.write("            \r\n");
      out.write("            // Reset error messages\r\n");
      out.write("            document.querySelectorAll('.error-message').forEach(el => el.style.display = 'none');\r\n");
      out.write("            \r\n");
      out.write("            // Validate primeiro nome\r\n");
      out.write("            if (!/^[A-Za-z]+$/.test(primeiroNome.value)) {\r\n");
      out.write("                document.getElementById('primeiroNomeError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Validate último nome\r\n");
      out.write("            if (!/^[A-Za-z]+$/.test(ultimoNome.value)) {\r\n");
      out.write("                document.getElementById('ultimoNomeError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Validate cidade\r\n");
      out.write("            if (!/^[A-Za-z ]+$/.test(cidade.value)) {\r\n");
      out.write("                document.getElementById('cidadeError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Validate celular\r\n");
      out.write("            if (!/^[0-9]{9}$/.test(celular.value)) {\r\n");
      out.write("                document.getElementById('celularError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Validate email\r\n");
      out.write("            if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email.value)) {\r\n");
      out.write("                document.getElementById('emailError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            // Validate CPF\r\n");
      out.write("            if (!/^[0-9]{11}$/.test(cpf.value)) {\r\n");
      out.write("                document.getElementById('cpfError').style.display = 'block';\r\n");
      out.write("                isValid = false;\r\n");
      out.write("            } else {\r\n");
      out.write("                // CPF validation algorithm\r\n");
      out.write("                let sum = 0;\r\n");
      out.write("                let remainder;\r\n");
      out.write("                \r\n");
      out.write("                if (cpf.value == \"00000000000\") return false;\r\n");
      out.write("                \r\n");
      out.write("                for (let i = 1; i <= 9; i++) {\r\n");
      out.write("                    sum = sum + parseInt(cpf.value.substring(i-1, i)) * (11 - i);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                remainder = (sum * 10) % 11;\r\n");
      out.write("                \r\n");
      out.write("                if ((remainder == 10) || (remainder == 11)) remainder = 0;\r\n");
      out.write("                if (remainder != parseInt(cpf.value.substring(9, 10))) {\r\n");
      out.write("                    document.getElementById('cpfError').style.display = 'block';\r\n");
      out.write("                    isValid = false;\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                sum = 0;\r\n");
      out.write("                for (let i = 1; i <= 10; i++) {\r\n");
      out.write("                    sum = sum + parseInt(cpf.value.substring(i-1, i)) * (12 - i);\r\n");
      out.write("                }\r\n");
      out.write("                \r\n");
      out.write("                remainder = (sum * 10) % 11;\r\n");
      out.write("                \r\n");
      out.write("                if ((remainder == 10) || (remainder == 11)) remainder = 0;\r\n");
      out.write("                if (remainder != parseInt(cpf.value.substring(10, 11))) {\r\n");
      out.write("                    document.getElementById('cpfError').style.display = 'block';\r\n");
      out.write("                    isValid = false;\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            return isValid;\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
